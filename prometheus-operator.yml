prometheusOperator:
  createCustomResource: false
  resources:
    requests:
      cpu: 10m
      memory: 40Mi
    limits:
      cpu: 100m
      memory: 100Mi
  persistence:
    enabled: true
    accessModes: ["ReadWriteOnce"]
    storageClassName: standard
    size: 5Gi
alertmanager:
  #  config:
  #    global:
  #      resolve_timeout: 5m
  #      slack_api_url: ""
  #    route:
  #      group_by: ['job']
  #      group_wait: 30s
  #      group_interval: 5m
  #      repeat_interval: 12h
  #      #receiver: 'slack'
  #      routes:
  #      - match:
  #          alertname: DeadMansSwitch
  #        receiver: 'null'
  #      - match:
  #          severity: critical
  #        receiver: 'slack'
  #        continue: true
  #    receivers:
  #    - name: 'null'
  #    - name: 'slack'
  #      slack_configs:
  #      - channel: "#devops-alert"
  #        send_resolved: false
  #        title: |-
  #          {{ .CommonLabels.alertname }}
  #        text: >-
  #          {{ with index .Alerts 0 -}}
  #            {{- if .Annotations.runbook }}   :notebook: *<{{ .Annotations.runbook }}|Runbook>*{{ end }}
  #          {{ end }}
  #
  #          *Alert details*:
  #
  #          {{ range .Alerts -}}
  #            *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
  #          *Description:* {{ .Annotations.description }}
  #          *Details:*
  #            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
  #            {{ end }}
  #          {{ end }}
  alertmanagerSpec:
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
      limits:
        cpu: 100m
        memory: 50Mi
    fstorage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          storageClassName: standard
          resources:
            requests:
              storage: 10Gi
prometheus:
  prometheusSpec:
    enableAdminAPI: true
    image:
      tag: v2.15.2
    retention: 6h
    retentionSize: 5GB
    resources:
      limits:
        cpu: 200m
        memory: 1000Mi
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          storageClassName: standard
          resources:
            requests:
              storage: 5Gi
grafana:
  adminPassword: ""
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 300m
      memory: 200Mi
  persistence:
    enabled: true
    accessModes: ["ReadWriteOnce"]
    storageClassName: standard
    size: 5Gi
kube-state-metrics:
  resources:
    requests:
      cpu: 5m
      memory: 20Mi
    limits:
      cpu: 50m
      memory: 50Mi
prometheus-node-exporter:
  resources:
    requests:
      cpu: 5m
      memory: 20Mi
    limits:
      cpu: 50m
      memory: 30Mi
kubeApiServer:
  enabled: false
